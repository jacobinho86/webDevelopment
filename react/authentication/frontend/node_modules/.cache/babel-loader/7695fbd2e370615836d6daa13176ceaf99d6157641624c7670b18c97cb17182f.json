{"ast":null,"code":"import { redirect } from \"react-router-dom\";\nexport function getTokenDuration() {\n  const storedExpirationDate = localStorage.getItem('expiration');\n  const expirationDate = new Date(storedExpirationDate);\n  const now = new Date();\n  const duration = expirationDate.getTime() - now.getTime();\n  return duration;\n}\nexport function getAuthToken() {\n  const token = localStorage.getItem('token');\n\n  //case #1: no token at all, return null\n  if (!token) {\n    return null;\n  }\n  const tokenDuration = getTokenDuration();\n\n  //case #2: there is a token and it is expired, then return \"expired\"\n  if (tokenDuration < 0) {\n    return 'EXPIRED';\n  }\n\n  //case #3: there is a token and is not expired, then return the token\n  return token;\n}\nexport function tokenLoader() {\n  return getAuthToken();\n}\nexport function checkAuthLoader() {\n  const token = getAuthToken();\n  if (!token) {\n    return redirect('/auth');\n  }\n  return null;\n}","map":{"version":3,"names":["redirect","getTokenDuration","storedExpirationDate","localStorage","getItem","expirationDate","Date","now","duration","getTime","getAuthToken","token","tokenDuration","tokenLoader","checkAuthLoader"],"sources":["C:/Users/sacto/OneDrive/Documentos/react/01-starting-project/frontend/src/util/auth.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\r\n\r\nexport function getTokenDuration() {\r\n    const storedExpirationDate = localStorage.getItem('expiration');\r\n    const expirationDate = new Date(storedExpirationDate);\r\n    const now = new Date();\r\n    const duration = expirationDate.getTime() - now.getTime();\r\n    return duration;\r\n  }\r\n\r\nexport function getAuthToken() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    //case #1: no token at all, return null\r\n    if(!token){\r\n        return null;\r\n    }\r\n\r\n    const tokenDuration = getTokenDuration();\r\n\r\n    //case #2: there is a token and it is expired, then return \"expired\"\r\n    if(tokenDuration<0) {\r\n        return 'EXPIRED';\r\n    }\r\n\r\n    //case #3: there is a token and is not expired, then return the token\r\n    return token;\r\n}\r\n\r\nexport function tokenLoader() {\r\n    return getAuthToken();\r\n}\r\n\r\nexport function checkAuthLoader(){\r\n    const token = getAuthToken();\r\n\r\n    if(!token){\r\n        return redirect('/auth');\r\n    }\r\n\r\n    return null;\r\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAC/B,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC/D,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACJ,oBAAoB,CAAC;EACrD,MAAMK,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EACtB,MAAME,QAAQ,GAAGH,cAAc,CAACI,OAAO,CAAC,CAAC,GAAGF,GAAG,CAACE,OAAO,CAAC,CAAC;EACzD,OAAOD,QAAQ;AACjB;AAEF,OAAO,SAASE,YAAYA,CAAA,EAAG;EAC3B,MAAMC,KAAK,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAG,CAACO,KAAK,EAAC;IACN,OAAO,IAAI;EACf;EAEA,MAAMC,aAAa,GAAGX,gBAAgB,CAAC,CAAC;;EAExC;EACA,IAAGW,aAAa,GAAC,CAAC,EAAE;IAChB,OAAO,SAAS;EACpB;;EAEA;EACA,OAAOD,KAAK;AAChB;AAEA,OAAO,SAASE,WAAWA,CAAA,EAAG;EAC1B,OAAOH,YAAY,CAAC,CAAC;AACzB;AAEA,OAAO,SAASI,eAAeA,CAAA,EAAE;EAC7B,MAAMH,KAAK,GAAGD,YAAY,CAAC,CAAC;EAE5B,IAAG,CAACC,KAAK,EAAC;IACN,OAAOX,QAAQ,CAAC,OAAO,CAAC;EAC5B;EAEA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}