{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sacto\\\\OneDrive\\\\Documentos\\\\react\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom'; //access to the data sent by the nearest loader function\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"Couldn't fetch events data\"\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","isError","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","resData","json","$RefreshReg$"],"sources":["C:/Users/sacto/OneDrive/Documentos/react/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom'; //access to the data sent by the nearest loader function\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n\r\n  if(events.isError){\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    return {isError: true, message: \"Couldn't fetch events data\"};\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;  \r\n  }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB,CAAC,CAAC;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGR,aAAa,CAAC,CAAC;EAE9B,IAAGQ,MAAM,CAACC,OAAO,EAAC,CAElB;EAEA,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAZQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAe,EAAA,GADrBT,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACV,OAAO,EAAE,IAAI;MAAEW,OAAO,EAAE;IAA4B,CAAC;EAC/D,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACb,MAAM;EACvB;AACF;AAAC,IAAAO,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}