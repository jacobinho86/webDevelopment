{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sacto\\\\OneDrive\\\\Documentos\\\\react\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { json } from \"react-router-dom\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"BM+mI9U5zDhlCgaFBKclJ6EcCBg=\", false, function () {\n  return [useLoaderData, useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\n\n//react router passes an object to loader functions, with the request and the parameters.\nexport async function loader({\n  request,\n  params\n}) {\n  const response = await fetch('http://localhost:8080/events/' + params.eventId); //this is how we can access the parameters of the url\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event...\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","EventItem","json","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","params","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","response","fetch","eventId","ok","message","status","$RefreshReg$"],"sources":["C:/Users/sacto/OneDrive/Documentos/react/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport { json } from \"react-router-dom\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventDetailPage() {\r\n    const data = useLoaderData();\r\n    const params = useParams();\r\n    return (\r\n        <>\r\n            <EventItem event={data.event}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\n//react router passes an object to loader functions, with the request and the parameters.\r\nexport async function loader({request, params}) {\r\n\r\n    const response = await fetch('http://localhost:8080/events/' + params.eventId); //this is how we can access the parameters of the url\r\n    if(!response.ok) {\r\n        throw json({message: \"Could not fetch details for selected event...\"},{status:500});\r\n    }else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,MAAMQ,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,oBACIK,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACJ,SAAS;MAACY,KAAK,EAAEH,IAAI,CAACG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACjC,CAAC;AAEX;AAACR,EAAA,CARQD,eAAe;EAAA,QACPL,aAAa,EACXH,SAAS;AAAA;AAAAkB,EAAA,GAFnBV,eAAe;AAUxB,eAAeA,eAAe;;AAE9B;AACA,OAAO,eAAeW,MAAMA,CAAC;EAACC,OAAO;EAAET;AAAM,CAAC,EAAE;EAE5C,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGX,MAAM,CAACY,OAAO,CAAC,CAAC,CAAC;EAChF,IAAG,CAACF,QAAQ,CAACG,EAAE,EAAE;IACb,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAA+C,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvF,CAAC,MAAK;IACF,OAAOL,QAAQ;EACnB;AACJ;AAAC,IAAAH,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}