{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sacto\\\\OneDrive\\\\Documentos\\\\react\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  /*\n   This is how one would send the http requests from inside a component, not an action creator\n   useEffect(() => {\n    const sendCartData = async () =>{\n      dispatch(uiActions.showNotification({status: 'pending', title: 'Sending...', message:'Sending cart data!'}));\n      const response = await fetch('https://reduxtoolkitbackend-default-rtdb.firebaseio.com/cart.json', \n                             {method: 'PUT', body: JSON.stringify(cart)});\n      if(!response.ok){\n        throw new Error('Sending cart data failed...');\n      }\n       dispatch(uiActions.showNotification({status: 'success', title: 'Success!', message:'Sent cart data successfully!'}));\n     };\n    \n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n     sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({status: 'error', title: 'Error!', message:'Sending cart data failed!'}));\n    });\n      \n  }, [cart, dispatch]);\n  */\n\n  /* This is where we launch the requests from an action creator*/\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n\n  /*this is where we'll populate the cart from the database*/\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","useSelector","useEffect","useDispatch","Fragment","Notification","fetchCartData","sendCartData","jsxDEV","_jsxDEV","isInitial","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sacto/OneDrive/Documentos/react/01-starting-project/src/App.js"],"sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n \n  /*\n\n  This is how one would send the http requests from inside a component, not an action creator\n\n  useEffect(() => {\n    const sendCartData = async () =>{\n      dispatch(uiActions.showNotification({status: 'pending', title: 'Sending...', message:'Sending cart data!'}));\n      const response = await fetch('https://reduxtoolkitbackend-default-rtdb.firebaseio.com/cart.json', \n                             {method: 'PUT', body: JSON.stringify(cart)});\n      if(!response.ok){\n        throw new Error('Sending cart data failed...');\n      }\n\n      dispatch(uiActions.showNotification({status: 'success', title: 'Success!', message:'Sent cart data successfully!'}));\n\n    };\n    \n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({status: 'error', title: 'Error!', message:'Sending cart data failed!'}));\n    });\n      \n  }, [cart, dispatch]);\n  */\n\n  /* This is where we launch the requests from an action creator*/\n  useEffect(() => {\n\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n\n  }, [cart, dispatch]);\n\n  /*this is where we'll populate the cart from the database*/\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,aAAa,EAAEC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC7D,MAAMC,IAAI,GAAGjB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACG,IAAI,CAAC;EAC7C,MAAMC,YAAY,GAAGlB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;;EAEhE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAOE;EACAjB,SAAS,CAAC,MAAM;IAEd,IAAGQ,SAAS,EAAE;MACZA,SAAS,GAAG,KAAK;MACjB;IACF;IAEAG,QAAQ,CAACN,YAAY,CAACW,IAAI,CAAC,CAAC;EAE9B,CAAC,EAAE,CAACA,IAAI,EAAEL,QAAQ,CAAC,CAAC;;EAEpB;EACAX,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA,CAACL,QAAQ;IAAAgB,QAAA,GACND,YAAY,iBAAIV,OAAA,CAACJ,YAAY;MAACgB,MAAM,EAAEF,YAAY,CAACE,MAAO;MAACC,KAAK,EAAEH,YAAY,CAACG,KAAM;MAACC,OAAO,EAAEJ,YAAY,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvHlB,OAAA,CAACV,MAAM;MAAAqB,QAAA,GACJN,QAAQ,iBAAIL,OAAA,CAACX,IAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBlB,OAAA,CAACT,QAAQ;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAACf,EAAA,CA9DQD,GAAG;EAAA,QAEOR,WAAW,EACXF,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAA2B,EAAA,GALzBjB,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}